
[x] Debug "'NoneType' object has no attribute 'as_list'" 原因真的是跑出個
    NoneType 出來了! 不知為何? 可能是原始程式有敲錯東西?
    @ C:\Users\hcche\AppData\Local\Programs\Python\Python36\Lib\site-packages\tensorflow\python\keras\_impl\keras\layers\wrappers.py
    under line 188 
    
    11> child_input_shape . cr
    (?, 150, 150, 3)
    11> selfLayer . cr
    <tensorflow.python.keras._impl.keras.engine.training.Model object at 0x000001A1F0E1B5F8>
    11> selfLayer :> _compute_output_shape . cr
    <bound method Network._compute_output_shape of <tensorflow.python.keras._impl.keras.engine.training.Model object at 0x000001A1F0E1B5F8>>
    11> selfLayer :> _compute_output_shape(child_input_shape) . cr
    (?, 2048)
    11> selfLayer :> _compute_output_shape(child_input_shape).as_list() . cr

    Failed in </py> (compiling=False): 'NoneType' object has no attribute 'as_list'
    Body:
    push(pop()._compute_output_shape(child_input_shape).as_list())
    
    [x] check 
        self.layer :> _compute_output_shape(v('child_input_shape'))
        22> self.layer :> _compute_output_shape(v('child_input_shape')) . cr
        (?, 2048) <------ 其實是有東西的！
        
        22> self.layer :> _compute_output_shape(v('child_input_shape')) type . cr
        <class 'tensorflow.python.framework.tensor_shape.TensorShape'> <-------- (A)
        type 看起來也很體面。對照 _aa_ 看看人家啥 type ?
    
        tensor_shape :> TensorShape(input_shape)  \ _aa_

        This is at the beginning of def _compute_output_shape(self, input_shape):
            22> input_shape type . cr --> <class 'tuple'>
            22> input_shape . cr --> (None, None, 150, 150, 3) < --- this is the input 
            
            tensor_shape :> TensorShape(v('input_shape')) . cr --> (?, ?, 150, 150, 3)
            tensor_shape :> TensorShape(v('input_shape')) type . cr
                <class 'tensorflow.python.framework.tensor_shape.TensorShape'> <--- (B)
        (A)==(B)    
        所以 type 沒錯，內容有問題？

        自行組裝 child_input_shape
        22> tensor_shape :> TensorShape(v('input_shape')).as_list() constant input_shape2
        22> input_shape2 . cr --> [None, None, 150, 150, 3]
        tensor_shape :> TensorShape([v('input_shape2')[0]]+v('input_shape2')[2:]) 
            constant child_input_shape 
            child_input_shape . cr --> (?, 150, 150, 3)
        self.layer :> _compute_output_shape(v('child_input_shape')) type . cr 結果同上
        22> self.layer :> _compute_output_shape(v('child_input_shape')) . cr
            --> (?, 2048) 也對
        馬上要揭曉了。。。
        
            22> self.layer :> _compute_output_shape(v('child_input_shape')) . cr
            (?, 2048)
            22> self.layer :> _compute_output_shape(v('child_input_shape')) constant child_output_shape
            22> child_output_shape . cr
            None
            22> self.layer :> _compute_output_shape(v('child_input_shape')) . cr
            None
            22>        
        上面這行，第二次執行就會變成 None!!!! child_input_shape 沒變
        
        再一次，看第一次 as_list() 能不能轉得成？ <---- 可以！
        --> 重跑之後證實，可以！
        22> child_output_shape :> as_list() . cr --> [None, 2048]
        取得 child_output_shape 之後，馬上重跑兩次，結果當場傻眼：
            22> self.layer :> _compute_output_shape(v('child_input_shape')) . cr
            (?, 2048)
            22> self.layer :> _compute_output_shape(v('child_input_shape')) . cr
            None
            22> .s -->  empty
        
        再一次，看連跑幾次
        會怎樣？
            locals :: pop('peforth') locals inport 
            tensor_shape :> TensorShape(v('input_shape')).as_list() constant input_shape2
            tensor_shape :> TensorShape([v('input_shape2')[0]]+v('input_shape2')[2:]) 
                constant child_input_shape 
            self.layer :> _compute_output_shape(v('child_input_shape')) tib. \ ==> (?, 2048) (<class 'tensorflow.python.framework.tensor_shape.TensorShape'>)
            self.layer :> _compute_output_shape(v('child_input_shape')) tib. \ ==> (?, 2048) (<class 'tensorflow.python.framework.tensor_shape.TensorShape'>)
            self.layer :> _compute_output_shape(v('child_input_shape')) tib. \ ==> None (<class 'NoneType'>)
            self.layer :> _compute_output_shape(v('child_input_shape')) tib. \ ==> None (<class 'NoneType'>)
        結果真的很奇怪！前兩次 ok 
        
        好吧！發揮 peforth 的神力，在適當時機出手改變世界。。。
        斷在 self.layer :> _compute_output_shape() 處，把隨後的 as_list() 
        切開來做，先保存，檢查，計數 
        --> 第一把就是 none 了，
        --> 開始動手術，手動變個 (?, 2048) 出來餵它
            tensor_shape :> TensorShape(v('input_shape')) . cr --> (?, ?, 150, 150, 3)
            22> locals :> ['tensor_shape'].TensorShape([None,2048]) . cr --> (?, 2048)
            
            locals :> ['tensor_shape'].TensorShape([None,2048])
            locals :: ['child_output_shape']=pop(1)
            locals :> ['child_output_shape'] . cr --> (?, 2048) 改好了
            B i n g o !! 真的把它灌好了
            
[x] 檢查，看有沒有人討論這個問題
        search "_compute_output_shape NoneType" there are many
        Shit, this is it https://github.com/tensorflow/tensorflow/issues/14054
        Exactly the same problem. 這個問題 tf 1.4 才有 1.3 是好的，從 comment 
        來看，當時是 1.3 這下怎辦？ issue originator footh 的 solution 怎找？
        --> 靠！這問題很新哪，20 天前才剛 merged ! 2018.1.10 
            https://github.com/tensorflow/tensorflow/pull/14377
        --> 要改的地方在這裡    
            https://github.com/tensorflow/tensorflow/commit/d34c1d2978ec43f6600fc2f59d24055a972e09c6
            我的 tf 1.4 根本沒有 network.py 好新！
        --> to my tf 1.4 it is here    
            c:\Users\hcche\AppData\Local\Programs\Python\Python36\Lib\site-packages\tensorflow\python\layers\base.py 
            # 往左退了兩位 改好了，試試看 ..... 如果不進 33> 就對了 --> 對了！
[x] 檢查，看有沒有新版已經解決了？ 同上，解了！
    tf 1.4 才有這個問題，
    c:\Users\hcche\AppData\Local\Programs\Python\Python36\Lib\site-packages\tensorflow\python\layers\base.py 
    # 往左退兩位就好了 {    
    else:
      # Cache hit.
      output_shapes = self._output_shape_cache[cache_key]

    if isinstance(output_shapes, list):
      if len(output_shapes) == 1:
        return tensor_shape.TensorShape(output_shapes[0])
      else:
        return [tensor_shape.TensorShape(shape) for shape in output_shapes]
    else:
      return tensor_shape.TensorShape(output_shapes)
    # 往左退了兩位 }    
    回報恩人 https://github.com/tensorflow/tensorflow/issues/14054

    